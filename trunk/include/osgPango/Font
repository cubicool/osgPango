// -*-c++-*- osgPango - Copyright (C) 2008 Jeremy Moles

#ifndef OSGPANGO_FONT
#define OSGPANGO_FONT

#include <pango/pangocairo.h>

#include <osgPango/Glyph>

namespace osgPango {

const std::string OSGPANGO_DEFAULT_FONT = "Sans 6";

class OSGPANGO_EXPORT Font {
public:
	typedef std::list<std::string> FontList;

	static bool init(
		unsigned int                 = 72,
		osgCairo::CairoAntialias     = CAIRO_ANTIALIAS_SUBPIXEL,
		osgCairo::CairoHintStyle     = CAIRO_HINT_STYLE_FULL,
		osgCairo::CairoSubpixelOrder = CAIRO_SUBPIXEL_ORDER_RGB
	);

	static unsigned int getFontList(FontList&, bool = true);

	static void cleanup() {
		// TODO: This causes Windows to segfault.
		// g_object_unref(_map);

		g_object_unref(_context);
	}

	static PangoFontMap* getPangoFontMap() {
		return _map;
	}

	static PangoContext* getPangoContext() {
		return _context;
	}

private:
	// This is NOT an instantiable class.
	Font() {
	}

	static PangoFontMap* _map;
	static PangoContext* _context;
};

}

#endif
